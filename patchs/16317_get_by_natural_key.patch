Index: django/core/management/commands/dumpdata.py
===================================================================
--- django/core/management/commands/dumpdata.py	(revision 17766)
+++ django/core/management/commands/dumpdata.py	(working copy)
@@ -146,11 +146,11 @@
             for field in model._meta.fields:
                 if hasattr(field.rel, 'to'):
                     rel_model = field.rel.to
-                    if hasattr(rel_model, 'natural_key'):
+                    if hasattr(rel_model, 'natural_key') and rel_model != model:
                         deps.append(rel_model)
             for field in model._meta.many_to_many:
                 rel_model = field.rel.to
-                if hasattr(rel_model, 'natural_key'):
+                if hasattr(rel_model, 'natural_key') and field.rel.to != model:
                     deps.append(rel_model)
             model_dependencies.append((model, deps))
 
Index: tests/modeltests/fixtures/models.py
===================================================================
--- tests/modeltests/fixtures/models.py	(revision 17766)
+++ tests/modeltests/fixtures/models.py	(working copy)
@@ -97,3 +97,23 @@
 
     class Meta:
         ordering = ('name',)
+
+
+class NodeManager(models.Manager):
+    
+    def get_by_natural_key(self, code, name):
+        return self.get(code=code, name=name)
+
+class Node(models.Model):
+    code = models.IntegerField()
+    name = models.CharField(max_length=100)
+    parent = models.ForeignKey('self', null=True)
+
+    objects = NodeManager()
+
+    def natural_key(self):
+        return (self.code, self.name)
+
+
+    def __unicode__(self):
+        return "%s (%s)" % self.natural_key()
Index: tests/modeltests/fixtures/tests.py
===================================================================
--- tests/modeltests/fixtures/tests.py	(revision 17766)
+++ tests/modeltests/fixtures/tests.py	(working copy)
@@ -7,7 +7,7 @@
 from django.db import connection
 from django.test import TestCase, TransactionTestCase, skipUnlessDBFeature
 
-from .models import Article, Book, Spy, Tag, Visa
+from .models import Article, Book, Spy, Tag, Visa, Node
 
 
 class TestCaseFixtureLoadingTests(TestCase):
@@ -338,3 +338,18 @@
             '<Article: Time to reform copyright>',
             '<Article: Poker has no place on ESPN>',
         ])
+
+class TestCaseNaturalNodeFixtureLoadingTests(TestCase):
+    fixtures = ['nodes.json',]
+
+    def testClassFixtures(self):
+        "Check that test case has installed 4 fixture objects"
+        self.assertEqual(Node.objects.count(), 6)
+        self.assertQuerysetEqual(Node.objects.all(), [
+            '<Node: 7 (Tree)>',
+            '<Node: 3 (Sequoia)>',
+            '<Node: 10 (Eucalyptus)>',
+            '<Node: 16 (Sequoia sempervirens)>',
+            '<Node: 6 (Picea sitchensis)>',
+            '<Node: 17 (Picea)>'
+        ])
Index: tests/modeltests/fixtures/fixtures/nodes.json
===================================================================
--- tests/modeltests/fixtures/fixtures/nodes.json	(revision 0)
+++ tests/modeltests/fixtures/fixtures/nodes.json	(revision 0)
@@ -0,0 +1,71 @@
+[
+    {
+        "pk": 1, 
+        "model": "fixtures.node", 
+        "fields": {
+            "code": 7, 
+            "name": "Tree", 
+            "parent": null
+        }
+    }, 
+    {
+        "pk": 2, 
+        "model": "fixtures.node", 
+        "fields": {
+            "code": 3, 
+            "name": "Sequoia", 
+            "parent": [
+                7, 
+                "Tree"
+            ]
+        }
+    }, 
+    {
+        "pk": 3, 
+        "model": "fixtures.node", 
+        "fields": {
+            "code": 10, 
+            "name": "Eucalyptus", 
+            "parent": [
+                7, 
+                "Tree"
+            ]
+        }
+    }, 
+    {
+        "pk": 4, 
+        "model": "fixtures.node", 
+        "fields": {
+            "code": 16, 
+            "name": "Sequoia sempervirens", 
+            "parent": [
+                3, 
+                "Sequoia"
+            ]
+        }
+    },
+    {
+        "pk": 6,
+        "model": "fixtures.node",
+        "fields": {
+            "code": 17,
+            "name": "Picea",
+            "parent": [
+                7,
+                "Tree"
+            ]
+        }
+    },
+    {
+        "pk": 5, 
+        "model": "fixtures.node", 
+        "fields": {
+            "code": 6, 
+            "name": "Picea sitchensis", 
+            "parent": [
+                17, 
+                "Picea"
+            ]
+        }
+    }
+]
